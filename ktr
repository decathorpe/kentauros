#!/usr/bin/env python3

"""
ktr is kentauros.py
"""

import glob
import os

from kentauros import ActionType
from kentauros.actions import ACTION_DICT

from kentauros.init import log
from kentauros.init.cli import CLI_ACTION, CLI_PACKAGES, CLI_PACKAGES_ALL, CLI_FORCE
from kentauros.init.cli import CLI_CONFIG_SECTION, CLI_CONFIG_KEY, CLI_CONFIG_VALUE

from kentauros.config import KTR_CONF
from kentauros.bootstrap import ktr_bootstrap


LOGPREFIX1 = "ktr: "
LOGPREFIX2 = "     - "


print()

# if no action is specified: exit
if CLI_ACTION == None:
    log(LOGPREFIX1 + "No action specified. Exiting.", 2)
    raise SystemExit

ktr_bootstrap()

PKGS = []

# if only specified packages are to be processed:
# process packages only
if not CLI_PACKAGES_ALL:
    for name in CLI_PACKAGES:
        PKGS.append(name)

# if all package are to be processed:
# get package configs present in CONFDIR
else:
    PKG_CONF_PATHS = glob.glob(os.path.join(KTR_CONF['main']['confdir'], "*.conf"))

    for pkg_conf_path in PKG_CONF_PATHS:
        PKGS.append(os.path.basename(pkg_conf_path).rstrip(".conf"))

# log list of found packages
log(LOGPREFIX1 + "Packages:", 2)
for package in PKGS:
    log(LOGPREFIX2 + package, 2)

# process config changes seperately
if CLI_ACTION == ActionType.CONFIG:
    for name in PKGS:
        action = ACTION_DICT[CLI_ACTION](name, CLI_CONFIG_SECTION, CLI_CONFIG_KEY, CLI_CONFIG_VALUE)
        action.execute()

# process found packages, if the requested action is not a configuration change
else:
    for name in PKGS:
        action = ACTION_DICT[CLI_ACTION](name, CLI_FORCE)
        action.execute()

print()

